class Solution {
public:
    string repeatLimitedString(string s, int repeatLimit) {
        vector<int> v(26, 0);
        for (int i = 0; i < s.size(); i++) v[s[i] - 'a']++;

        priority_queue<pair<int, int>> maxheap;
        for (int i = 0; i < 26; i++) 
            if (v[i] > 0) maxheap.push({i, v[i]});

        string result = "";

        while (!maxheap.empty()) {
            auto curr = maxheap.top();
            maxheap.pop();

            char curr_char = 'a' + curr.first;
            int count = min(curr.second, repeatLimit);
            result.append(count, curr_char);
            curr.second -= count;

            if (curr.second > 0) {
                if (maxheap.empty()) break;

                auto next = maxheap.top();
                maxheap.pop();

                char next_char = 'a' + next.first;
                result.push_back(next_char);
                next.second--;

                if (next.second > 0) maxheap.push(next);
                maxheap.push(curr);
            }
        }
        return result;
    }
};
