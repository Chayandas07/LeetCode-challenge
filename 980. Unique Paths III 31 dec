class Solution {
public:
    int ans=0;
    void funs(vector<vector<int>>grid,int i,int j,int count)
    {
        if(i<0 || j<0 || i>=grid.size() ||j>=grid[0].size())
        {
            return;
        }
        if(grid[i][j]==-1 || grid[i][j]==3)
        {
            return;
        }
        if(grid[i][j]==2 && count==0)
        {
            ans++;
            return;
        }
        if(grid[i][j]==2)
        {
            return;
        }
        grid[i][j]=3;
        funs(grid,i,j+1,count-1);
        funs(grid,i+1,j,count-1);
        funs(grid,i-1,j,count-1);
        funs(grid,i,j-1,count-1);

    }


    int uniquePathsIII(vector<vector<int>>& grid) {
        int x,y,count=0;
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
            {
                if(grid[i][j]==1)
                {
                    x=i;
                    y=j;

                }
                if(grid[i][j]==0)
                {
                    count++;
                }
            }
        }
        funs(grid,x,y,count+1);
        return ans;
        
    }
};
