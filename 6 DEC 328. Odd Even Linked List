/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head==NULL || head->next==NULL || head->next->next==NULL)
        return head;
        
        ListNode* p=head;
        ListNode* fhead=NULL;
        int count=0;
        while(p->next!=NULL && p->next->next!=NULL)
        {
            ListNode* temp=p->next;
            p->next=p->next->next;
            temp->next=temp->next->next;
            count++;
            if(count==1)
            fhead=temp;

            p=p->next;
        }
        
        p->next=fhead;
        return head;
    }
};
