class Solution {
public:
    int maxDistance(string s, int k) {
        int dist=0, N=0, S=0, E=0, W=0, n=s.size();

        for(int i=0; i<n; i++){

            if(s[i]=='N'){
                N++;
            }else if(s[i]=='S'){
                S++;
            }else if(s[i]=='W'){
                W++;
            }else{
                E++;
            }

            int manhattan_dist=abs(N-S)+abs(E-W);
            int opposite_steps=min(N, S)+min(E, W);
            int flips=min(k, opposite_steps);
            int new_dist=manhattan_dist+2*flips;
            dist=max(dist, new_dist);
        }

        return dist;
    }
};
