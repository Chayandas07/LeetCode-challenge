class Solution {
public:
    vector<vector<int>> spiralMatrixIII(int rows, int cols, int rStart,
                                        int cStart) {
        vector<vector<int>> res;
        int i = rStart, j = cStart;
        char dir = 'R';
        int steps = 0;

        res.push_back({rStart, cStart});

        while (res.size() != rows * cols) {
            if (dir == 'R' || dir == 'L') {
                steps++;
            }
            int curSteps = steps;
            while (curSteps--) {
                if (dir == 'R') {
                    j = j + 1;
                } else if (dir == 'L') {
                    j = j - 1;
                } else if (dir == 'U') {
                    i = i - 1;
                } else if (dir == 'D') {
                    i = i + 1;
                }
                if (i >= 0 && i < rows && j >= 0 && j < cols) {
                    res.push_back({i, j});
                }
            }
            if (dir == 'R') {
                dir = 'D';
            } else if (dir == 'L') {
                dir = 'U';
            } else if (dir == 'U') {
                dir = 'R';
            } else if (dir == 'D') {
                dir = 'L';
            }
        }
        return res;
    }
};
