class Solution {
public:
    int lenLongestFibSubseq(vector<int>& arr) {
        int  n = arr.size();
        unordered_map<int,int>mp; // element->index
        for(int i=0; i<n; i++){
            mp[arr[i]] = i;
        }
        vector<vector<int>>dp(n,vector<int>(n,2));
        int maxLen = 0;
        
        for(int i=0; i<n-1;i++){
            for(int j=i+1; j<n;j++){
                int next = arr[i] + arr[j];
                if(mp.find(next) != mp.end()){
                    int k = mp[next];
                    if(k>j){
                        dp[j][k] = 1 + dp[i][j];
                        maxLen = max(maxLen,dp[j][k]);
                    }
                }
            }
        }  
        return maxLen > 2 ? maxLen : 0;
    }
};
