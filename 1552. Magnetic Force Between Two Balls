class Solution {
public:
    int maxDistance(vector<int>& position, int m) {
        sort(position.begin(),position.end());
        int l = 0;
        int r = static_cast<int>((position[position.size()-1] - position[l])/(m-1));
        int res = 0;
        while(l<=r){
            int mid = (l+r)/2;
            if(isPossible(position, m, mid)){
                res = mid;
                l = mid + 1;
            }else{
                r = mid - 1;
            }
        }
        return res;
    }
    bool isPossible(vector<int>& position, int m, int mid){
        if(mid == 0)return true;
        int i=0;
        while(i<position.size()){
            int start = position[i];
            while(i<position.size() && position[i]<start+mid){
                i++;
            }
            if(i<position.size() && position[i]>=start+mid)m--;
        }
        if(m <= 1)return true;
        return false;
    }
};
