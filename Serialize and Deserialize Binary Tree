import java.io.*;
import java.nio.charset.StandardCharsets;

public class Codec {
    
    public String serialize(TreeNode root) {
        var bos = new ByteArrayOutputStream(1024 * 16);
        serialize(root, bos);
        return bos.toString(StandardCharsets.ISO_8859_1);
    }

    public TreeNode deserialize(String data) {
        var bytes = data.getBytes(StandardCharsets.ISO_8859_1);
        var bis = new ByteArrayInputStream(bytes);
        return deserialize(bis);
    }

    static void serialize(TreeNode node, ByteArrayOutputStream bos) {
        if (node == null) {
            bos.write(0);
        } else {
            bos.write(1);
            writeInt(bos, node.val);
            serialize(node.left, bos);
            serialize(node.right, bos);
        }
    }

    static TreeNode deserialize(ByteArrayInputStream bis) {
        if (bis.available() == 0 || bis.read() == 0) {
            return null;
        }
        var n = new TreeNode(readInt(bis));
        n.left = deserialize(bis);
        n.right = deserialize(bis);
        return n;
    }

    static void writeInt(ByteArrayOutputStream bos, int val) {
        bos.write((val >>> 24) & 0xFF);
        bos.write((val >>> 16) & 0xFF);
        bos.write((val >>> 8) & 0xFF);
        bos.write(val & 0xFF);
    }

    static int readInt(ByteArrayInputStream bis) {
        int val = bis.read() << 24;
        val |= bis.read() << 16;
        val |= bis.read() << 8;
        val |= bis.read();
        return val;
    }
}
