class Solution {
public:
    bool doesValidArrayExist(vector<int>& derived) {
        int n=derived.size();
        if(n==1 && derived[0]==0){
            return true;
        }
        else if(n==1 && derived[0]==1){
            return false;
        }
        vector<int> helper(n);
        if(derived[n-1]==0){
            helper[0]=1;
            helper[n-1]=1;
            for(int i=0;i<n-2;i++){
                if(derived[i]==0){
                    helper[i+1]=helper[i];
                }
                else{
                    helper[i+1]=1-helper[i];
                }
            }
            if(helper[n-2]^helper[n-1]==derived[n-2]){
                return true;
            }
        }
        else{
            helper[0]=0;
            helper[n-1]=1;
            for(int i=0;i<n-2;i++){
                if(derived[i]==0){
                    helper[i+1]=helper[i];
                }
                else{
                    helper[i+1]=1-helper[i];
                }
            }
            if(helper[n-2]^helper[n-1]==derived[n-2]){
                return true;
            }
            
        }
        return false;
    }
};
